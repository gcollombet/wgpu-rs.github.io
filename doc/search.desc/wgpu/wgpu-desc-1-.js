searchState.loadedDescShard("wgpu", 1, "Returns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new staging belt.\nRecall all of the closed buffers back to be reused.\nMove all chunks that the GPU is done with (and are now …\nFree chunks are received here to be put on <code>self.free_chunks</code>…\nWhen closed chunks are mapped again, the map callback …\nAllocate the staging belt slice of <code>size</code> to be uploaded …\nDescribes a Buffer when allocating.\nUtility methods not meant to be in the main API.\nContents of a buffer on creation.\nCreates a Buffer with data to initialize it.\nUpload an entire texture and its mipmaps from a source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDebug label of a buffer. This will show up in graphics …\nUsages of a buffer. If the buffer is used in any way that …\nMethods shared by <code>RenderPass</code> and <code>RenderBundleEncoder</code>.\nDraws primitives from the active vertex buffer(s).\nDraws indexed primitives using the active index buffer and …\nDraws indexed primitives using the active index buffer and …\nDraws primitives from the active vertex buffer(s) based on …\nSets the active bind group for a given bind group index. …\nSets the active index buffer.\nSets the active render pipeline.\n<code>wgt::Features::PUSH_CONSTANTS</code> must be enabled on the …\nAssign a vertex buffer to a slot.\nInitialize the adapter obeying the WGPU_ADAPTER_NAME …\nInitialize the adapter obeying the WGPU_ADAPTER_NAME …\nDetermines whether the <code>Backends::BROWSER_WEBGPU</code> backend is …\nCreate an new instance of wgpu, but disabling …\nTexture Blitting (Copying) Utility\nA builder for the <code>TextureBlitter</code> utility. If you want the …\nSets the <code>BlendState</code> that is used.\nReturns a new <code>TextureBlitter</code> with given settings.\nCopies the data from the source <code>TextureView</code> to the target …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new <code>TextureBlitterBuilder</code>\nReturns a <code>TextureBlitter</code> with default settings.\nSets the <code>Sampler</code> Filtering Mode")