(function() {
    var type_impls = Object.fromEntries([["naga",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFromAbstract%3Cf64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/naga/proc/constant_evaluator.rs.html#2746-2752\">Source</a><a href=\"#impl-TryFromAbstract%3Cf64%3E-for-u32\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"naga/proc/constant_evaluator/trait.TryFromAbstract.html\" title=\"trait naga::proc::constant_evaluator::TryFromAbstract\">TryFromAbstract</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_abstract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/naga/proc/constant_evaluator.rs.html#2747-2751\">Source</a><a href=\"#method.try_from_abstract\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"naga/proc/constant_evaluator/trait.TryFromAbstract.html#tymethod.try_from_abstract\" class=\"fn\">try_from_abstract</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"naga/proc/enum.ConstantEvaluatorError.html\" title=\"enum naga::proc::ConstantEvaluatorError\">ConstantEvaluatorError</a>&gt;</h4></section></summary><div class='docblock'>Convert an abstract literal <code>value</code> to <code>Self</code>. <a href=\"naga/proc/constant_evaluator/trait.TryFromAbstract.html#tymethod.try_from_abstract\">Read more</a></div></details></div></details>","TryFromAbstract<f64>","naga::front::spv::function::BlockId","naga::front::spv::MemberIndex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFromAbstract%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/naga/proc/constant_evaluator.rs.html#2665-2672\">Source</a><a href=\"#impl-TryFromAbstract%3Ci64%3E-for-u32\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"naga/proc/constant_evaluator/trait.TryFromAbstract.html\" title=\"trait naga::proc::constant_evaluator::TryFromAbstract\">TryFromAbstract</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_abstract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/naga/proc/constant_evaluator.rs.html#2666-2671\">Source</a><a href=\"#method.try_from_abstract\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"naga/proc/constant_evaluator/trait.TryFromAbstract.html#tymethod.try_from_abstract\" class=\"fn\">try_from_abstract</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.1/std/primitive.u32.html\">u32</a>, <a class=\"enum\" href=\"naga/proc/enum.ConstantEvaluatorError.html\" title=\"enum naga::proc::ConstantEvaluatorError\">ConstantEvaluatorError</a>&gt;</h4></section></summary><div class='docblock'>Convert an abstract literal <code>value</code> to <code>Self</code>. <a href=\"naga/proc/constant_evaluator/trait.TryFromAbstract.html#tymethod.try_from_abstract\">Read more</a></div></details></div></details>","TryFromAbstract<i64>","naga::front::spv::function::BlockId","naga::front::spv::MemberIndex"]]],["wgpu",[]],["wgpu_core",[]],["wgpu_hal",[]],["wgpu_types",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[4003,12,17,16,18]}